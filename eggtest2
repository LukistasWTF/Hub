-- Minigames Hub (RuinRush) · LocalScript
-- No requiere InteriorsM. Teleport local a AztecLobby por MainDoor.

local DEST_ID = "AztecLobby"

--== Servicios
local Players, RS, RunService, StarterGui, UIS, VU =
	game:GetService("Players"), game:GetService("ReplicatedStorage"),
	game:GetService("RunService"), game:GetService("StarterGui"),
	game:GetService("UserInputService"), game:GetService("VirtualUser")

local LP = Players.LocalPlayer

--== Mensajes
local function say(msg)
	print("[Hub] "..msg)
	pcall(function() StarterGui:SetCore("ChatMakeSystemMessage",{Text="[Hub] "..msg}) end)
end

--== Fsys / Roact opcional
local Fsys; do local ok,res=pcall(function() return require(RS:WaitForChild("Fsys")) end); if ok then Fsys=res end end
local Roact = Fsys and (pcall(function() return Fsys.load("Roact") end)) and Fsys.load("Roact") or nil

--== Helpers básicos
local function getHRP()
	local ch = LP.Character or LP.CharacterAdded:Wait()
	return ch:WaitForChild("HumanoidRootPart"), ch:WaitForChild("Humanoid")
end
local function formatClock(sec) sec=math.max(0,math.floor(sec)); return ("%02d:%02d"):format(math.floor(sec/60),sec%60) end

--== Pequeña transición (blanco), estilo DoorsClient/TeleportDoor
local function fadeWhite(duration, startAlpha, endAlpha, yields)
	local sg = Instance.new("ScreenGui"); sg.ResetOnSpawn=false; sg.IgnoreGuiInset=true; sg.DisplayOrder=1e6
	sg.Name="RR_Fade"; sg.Parent=LP:WaitForChild("PlayerGui")
	local f = Instance.new("Frame"); f.BackgroundColor3=Color3.new(1,1,1); f.BorderSizePixel=0
	f.Size=UDim2.fromScale(1,1); f.BackgroundTransparency=startAlpha or 1; f.Parent=sg
	local t = game:GetService("TweenService"):Create(f, TweenInfo.new(duration or 0.5), {BackgroundTransparency=endAlpha or 0})
	t:Play(); if yields then t.Completed:Wait() end
	task.delay(0.6, function() if sg and sg.Parent then sg:Destroy() end end)
end

--== ======   RUINRUSH / TP SIN INTERIORS   ====== --

local RR = {}

-- Encuentra el modelo de edificio y su MainDoor
function RR.findAztecBuildingAndDoor()
	local root = workspace:FindFirstChild("Interiors")
	if not root then return end

	-- 1) Ruta canónica: Interiors/*/Buildings/AztecLobby/Doors/MainDoor
	for _,container in ipairs(root:GetChildren()) do
		local b = container:FindFirstChild("Buildings")
		if b and b:FindFirstChild(DEST_ID) then
			local building = b[DEST_ID]
			if building:FindFirstChild("Doors") and building.Doors:FindFirstChild("MainDoor") then
				return building, building.Doors.MainDoor
			end
		end
	end
	-- 2) Fallback: Interiors/*/Doors/* con destination_id == DEST_ID
	for _,container in ipairs(root:GetChildren()) do
		local doors = container:FindFirstChild("Doors")
		if doors then
			for _,d in ipairs(doors:GetChildren()) do
				if d:IsA("Model") then
					local cfg = d:FindFirstChild("WorkingParts") and d.WorkingParts:FindFirstChild("Configuration")
					local dest = cfg and cfg:FindFirstChild("destination_id")
					if dest and tostring(dest.Value)==DEST_ID then
						-- Intentamos deducir el edificio subiendo
						local p=d.Parent
						while p and p~=container do
							if p.Name==DEST_ID then return p, d end
							p = p.Parent
						end
						return nil, d
					end
				end
			end
		end
	end
end

-- Busca SpawnPoints en el building
local function getSpawnCF(building)
	if not building then return end
	local spFolder = building:FindFirstChild("SpawnPoints")
	if not spFolder then
		-- Algunos setups meten SpawnPoints dentro de submodelos
		for _,desc in ipairs(building:GetDescendants()) do
			if desc:IsA("Folder") and desc.Name=="SpawnPoints" then spFolder=desc; break end
		end
	end
	if spFolder then
		local first = spFolder:FindFirstChild("1") or spFolder:GetChildren()[1]
		if first and first:IsA("BasePart") then return first.CFrame end
	end
	-- Alternativa: AttachmentPoints.Entrance
	local ap = building:FindFirstChild("AttachmentPoints", true)
	local entrance = ap and ap:FindFirstChild("Entrance")
	if entrance and entrance:IsA("Attachment") then
		return entrance.WorldCFrame * CFrame.new(0, 2.5, 0)
	end
end

-- Caja libre
local function isFreeBox(cf)
	local parts = workspace:GetPartBoundsInBox(cf, Vector3.new(3,6,3))
	local solid = 0
	for _,p in ipairs(parts) do
		if p.CanCollide and p.Transparency<0.98 then solid+=1 end
	end
	return solid<=6
end

-- Si no hay SpawnPoints: calcula un punto “dentro” desde TouchToEnter (probando ambos lados)
local function computeInsideFromTouch(touch)
	local origin = touch.CFrame
	local up = Vector3.new(0,2,0)
	for _,dir in ipairs({origin.LookVector, -origin.LookVector}) do
		for dist=6,12,2 do
			local p = origin.Position + up + dir*dist
			local cf = CFrame.new(p, p + dir)
			if isFreeBox(cf) then return cf end
		end
	end
	return origin + up
end

-- Teleport local con desanclado + salida de asiento + RequestStream + fade
function RR.teleportToAztec()
	local building, door = RR.findAztecBuildingAndDoor()
	if not door then
		say(("[RuinRush] No encuentro MainDoor/door de '%s'."):format(DEST_ID))
		return false
	end

	local hrp,hum = getHRP()

	-- Spawn CF por prioridad: SpawnPoints > Entrance > calculado desde Touch
	local spawnCF = getSpawnCF(building)
	if not spawnCF then
		local touch = door:FindFirstChild("WorkingParts") and door.WorkingParts:FindFirstChild("TouchToEnter")
		if not touch then
			say("[RuinRush] La puerta no tiene TouchToEnter; intento spawn relativo.")
			spawnCF = (door.PrimaryPart and door.PrimaryPart.CFrame or door:GetPivot()) * CFrame.new(0,2,8)
		else
			spawnCF = computeInsideFromTouch(touch)
		end
	end

	-- Preparar character
	if hum.Sit then
		hum.Sit=false; hum.Jump=true
		local weld = hum.SeatPart and hum.SeatPart:FindFirstChild("SeatWeld")
		if weld then weld:Destroy() end
		task.wait(0.2)
	end

	-- Transición como en tu TeleportDoor
	fadeWhite(0.5, 1, 0, true)
	pcall(function() LP:RequestStreamAroundAsync(spawnCF.Position, 2) end)
	hrp.Anchored=false
	hrp.CFrame = spawnCF
	task.wait(0.5)
	fadeWhite(0.5, 0, 1, false)

	say("[RuinRush] Teletransportado a AztecLobby.")
	return true
end

-- ====== Resto utilidades RuinRush (colecta, salida, etc.) ======

local ForcedState = Fsys and (pcall(function() return Fsys.load("MinigameForcedState") end)) and Fsys.load("MinigameForcedState") or nil
local KillInterior = Fsys and (pcall(function() return Fsys.load("KillBlockInteriorManager") end)) and Fsys.load("KillBlockInteriorManager") or nil

function RR.safeOn()
	if ForcedState and type(ForcedState.set_buff)=="function" then pcall(function() ForcedState.set_buff("rr_safe",{walk_speed=22,jump_power=0}) end) end
	local sp = workspace:FindFirstChild("SpawnPoints", true)
	if sp and KillInterior and type(KillInterior.set_spawn_point)=="function" then pcall(function() KillInterior.set_spawn_point(sp) end) end
end
function RR.safeOff() if ForcedState and type(ForcedState.remove_buff)=="function" then pcall(function() ForcedState.remove_buff("rr_safe") end) end end

local function sweepThrough(part)
	if not part or not part.Parent then return end
	local hrp,hum = getHRP(); hum:ChangeState(Enum.HumanoidStateType.Running); hrp.Anchored=false
	local base,size,up = part.CFrame, part.Size, Vector3.new(0,1,0)
	local a = base.Position + up*(size.Y*0.5) - base.LookVector*(size.Z+4)
	local b = base.Position + up*(size.Y*0.5) + base.LookVector*(size.Z+4)
	for i=0,12 do
		local pos = a:Lerp(b, i/12)
		hrp.CFrame = CFrame.new(pos, pos + base.LookVector)
		RunService.Heartbeat:Wait()
	end
end

local function findRealSkulls()
	local list={}
	for _,m in ipairs(workspace:GetDescendants()) do
		if m:IsA("Model") and m.Name=="GoldenSkull" then
			local p=m.Parent; local ok=false
			while p do
				if p:IsA("Folder") and p.Name=="PickupEntities" then ok=true; break end
				p=p.Parent
			end
			if ok then table.insert(list,m) end
		end
	end
	return list
end

local function findPedestalSkull()
	for _,m in ipairs(workspace:GetDescendants()) do
		if m:IsA("Model") and m.Name=="GoldenSkull" and (m.Parent and tostring(m.Parent.Name):lower():find("pedastal")) then
			return m
		end
	end
end

local function findExitDoor()
	for _,inst in ipairs(workspace:GetDescendants()) do
		if inst:IsA("BasePart") and inst.Name=="ExitDoor" then return inst end
	end
end

function RR.ensureChaseStarted(t)
	local ped = findPedestalSkull()
	if ped then say("RuinRush: activando pedestal…"); sweepThrough(ped) end
	task.wait(t or 6)
end

function RR.collectAll(maxPasses, perPassWait, progressCb)
	maxPasses, perPassWait = maxPasses or 4, perPassWait or 1.2
	local collected = 0
	for pass=1,maxPasses do
		local skulls = findRealSkulls()
		if progressCb then progressCb(("Ronda %d: %d skulls"):format(pass,#skulls)) end
		if #skulls==0 then if pass==1 then RunService.Heartbeat:Wait() else break end end
		for _,s in ipairs(skulls) do
			if s and s.Parent then sweepThrough(s); collected+=1; RunService.Heartbeat:Wait(); if progressCb then progressCb(nil,collected) end end
		end
		task.wait(perPassWait)
	end
	return collected
end

function RR.exit()
	local door = findExitDoor()
	if not door then say("RuinRush: no veo ExitDoor aún."); return false end
	sweepThrough(door); return true
end

-- Auto Run NO teleporta
function RR.runAuto(onStep,onProgress)
	RR.safeOn(); task.wait(0.8)
	if onStep then onStep("start") end
	RR.ensureChaseStarted(6)
	if onStep then onStep("collect") end
	local got = RR.collectAll(5,1.2,onProgress)
	if got>0 then say(("RuinRush: %d skulls recogidas."):format(got)) end
	if onStep then onStep("exit") end
	RR.exit()
	RR.safeOff()
	if onStep then onStep("done") end
end

-- Atajos
UIS.InputBegan:Connect(function(input,gp)
	if gp then return end
	if input.KeyCode==Enum.KeyCode.T then RR.teleportToAztec() end
	if input.KeyCode==Enum.KeyCode.G then RR.safeOn(); local n=RR.collectAll(5,1.2); RR.safeOff(); say("RuinRush G: "..(n or 0).." skulls") end
	if input.KeyCode==Enum.KeyCode.K then RR.safeOn(); RR.exit(); RR.safeOff() end
end)

--================ UI (Roact) =================--
if not Roact then say("Falta Roact: sólo lógica."); return end

local RRPanel = Roact.Component:extend("RRPanel")
function RRPanel:init()
	self.state = { running=false, step="idle", status="Listo", progress=0, collected=0, timer=0, log={} }
	self.timer = RunService.Heartbeat:Connect(function(dt) if self.state.running then self:setState({timer=self.state.timer+dt}) end end)
end
function RRPanel:willUnmount() if self.timer then self.timer:Disconnect() end end
function RRPanel:pushLog(t) local copy=table.clone(self.state.log); table.insert(copy,1,t); if #copy>7 then copy[#copy]=nil end; self:setState({log=copy}) end
function RRPanel:run()
	if self.state.running then return end
	self:setState({running=true, step="start", status="Iniciando…", timer=0, collected=0, progress=0}); self:pushLog("▶ Auto Run")
	task.spawn(function()
		local function onStep(st)
			if     st=="start"   then self:setState({step="start",   status="Activando pedestal…"}); self:pushLog("Pedestal…")
			elseif st=="collect" then self:setState({step="collect", status="Recogiendo skulls…"}); self:pushLog("Skulls…")
			elseif st=="exit"    then self:setState({step="exit",    status="Saliendo…"});         self:pushLog("Salida…")
			elseif st=="done"    then self:setState({step="done",    status="Hecho!"});            self:pushLog("✔ Terminado")
			end
		end
		local function onProg(_,c) if c then self:setState({collected=c, progress=math.clamp(c/3,0,1)}) end end
		RR.runAuto(onStep,onProg)
		self:setState({running=false, status="Listo"})
	end)
end
function RRPanel:collectOnly()
	if self.state.running then return end
	self:setState({running=true, step="collect", status="Recogiendo…", timer=0, collected=0, progress=0}); self:pushLog("▶ Solo Skulls")
	task.spawn(function()
		RR.safeOn()
		local n = RR.collectAll(5,1.2,function(_,c) if c then self:setState({collected=c,progress=math.clamp(c/3,0,1)}) end end)
		RR.safeOff()
		self:pushLog("Skulls: "..tostring(n)); self:setState({running=false, status="Listo"})
	end)
end
function RRPanel:exitOnly()
	if self.state.running then return end
	self:setState({running=true, step="exit", status="Saliendo…", timer=0}); self:pushLog("▶ Salir")
	task.spawn(function() RR.safeOn(); RR.exit(); RR.safeOff(); self:setState({running=false, status="Listo"}) end)
end
function RRPanel:tpOnly()
	self:pushLog("▶ TP a "..DEST_ID)
	self:setState({status="Teletransportando…"})
	task.spawn(function()
		local ok = RR.teleportToAztec()
		self:setState({status = ok and "TP completado" or "TP fallido"})
	end)
end
function RRPanel:render()
	local s=self.state
	return Roact.createElement("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,1,0)},{
		UIList = Roact.createElement("UIListLayout",{Padding=UDim.new(0,10)}),

		Title = Roact.createElement("TextLabel",{Text="Temple Trek • RuinRush",Font=Enum.Font.GothamBold,TextSize=20,BackgroundTransparency=1,TextColor3=Color3.new(1,1,1),Size=UDim2.new(1,0,0,24)}),

		Btns = Roact.createElement("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,40)},{
			H = Roact.createElement("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal,Padding=UDim.new(0,8)}),
			TP = Roact.createElement("TextButton",{Text="🌀 TP AztecLobby (T)",Font=Enum.Font.GothamBold,TextSize=18,BackgroundColor3=Color3.fromRGB(120,90,200),TextColor3=Color3.new(1,1,1),BorderSizePixel=0,Size=UDim2.new(0.25,-5,1,0),[Roact.Event.Activated]=function() self:tpOnly() end},{UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,6)})}),
			B1 = Roact.createElement("TextButton",{Text=s.running and ("Ejecutando… "..formatClock(s.timer)) or "▶ Auto Run",Font=Enum.Font.GothamBold,TextSize=18,BackgroundColor3=s.running and Color3.fromRGB(80,80,120) or Color3.fromRGB(70,120,200),TextColor3=Color3.new(1,1,1),BorderSizePixel=0,Size=UDim2.new(0.25,-5,1,0),[Roact.Event.Activated]=function() self:run() end},{UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,6)})}),
			B2 = Roact.createElement("TextButton",{Text="💎 Solo Skulls (G)",Font=Enum.Font.GothamBold,TextSize=18,BackgroundColor3=Color3.fromRGB(80,150,90),TextColor3=Color3.new(1,1,1),BorderSizePixel=0,Size=UDim2.new(0.25,-5,1,0),[Roact.Event.Activated]=function() self:collectOnly() end},{UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,6)})}),
			B3 = Roact.createElement("TextButton",{Text="🚪 Salir (K)",Font=Enum.Font.GothamBold,TextSize=18,BackgroundColor3=Color3.fromRGB(180,60,60),TextColor3=Color3.new(1,1,1),BorderSizePixel=0,Size=UDim2.new(0.25,0,1,0),[Roact.Event.Activated]=function() self:exitOnly() end},{UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,6)})}),
		}),

		ProgBG = Roact.createElement("Frame",{BackgroundColor3=Color3.fromRGB(50,50,50),BorderSizePixel=0,Size=UDim2.new(1,0,0,14)},{UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,4)}),Fill=Roact.createElement("Frame",{Size=UDim2.new(s.progress,0,1,0),BackgroundColor3=Color3.fromRGB(80,200,100),BorderSizePixel=0},{UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,4)})})}),
		Status = Roact.createElement("TextLabel",{Text=("Estado: %s"):format(s.status),Font=Enum.Font.Gotham,TextSize=16,BackgroundTransparency=1,TextColor3=Color3.fromRGB(220,220,220),Size=UDim2.new(1,0,0,18)}),

		LogBox = Roact.createElement("Frame",{BackgroundColor3=Color3.fromRGB(40,40,40),BorderSizePixel=0,Size=UDim2.new(1,0,1,-96)},{UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,6)}),Pad=Roact.createElement("UIPadding",{PaddingTop=UDim.new(0,8),PaddingLeft=UDim.new(0,8)}),List=Roact.createElement("UIListLayout",{Padding=UDim.new(0,6)}),
			L1=Roact.createElement("TextLabel",{Text=s.log[1] or "",Font=Enum.Font.Gotham,TextSize=15,BackgroundTransparency=1,TextColor3=Color3.new(1,1,1),Size=UDim2.new(1,-16,0,18)}),
			L2=Roact.createElement("TextLabel",{Text=s.log[2] or "",Font=Enum.Font.Gotham,TextSize=15,BackgroundTransparency=1,TextColor3=Color3.fromRGB(200,200,200),Size=UDim2.new(1,-16,0,18)}),
			L3=Roact.createElement("TextLabel",{Text=s.log[3] or "",Font=Enum.Font.Gotham,TextSize=15,BackgroundTransparency=1,TextColor3=Color3.fromRGB(180,180,180),Size=UDim2.new(1,-16,0,18)}),
			L4=Roact.createElement("TextLabel",{Text=s.log[4] or "",Font=Enum.Font.Gotham,TextSize=15,BackgroundTransparency=1,TextColor3=Color3.fromRGB(160,160,160),Size=UDim2.new(1,-16,0,18)}),
		})
	})
end

local Hub = Roact.Component:extend("MinigamesHub")
function Hub:init() self.state={showUI=true,pos=UDim2.new(0.5,-340,0.55,-190),dragging=false,dragOffset=Vector2.zero,antiAFK=false,active="RuinRush"} end
function Hub:willUnmount() if self.afkConn then self.afkConn:Disconnect() end end
function Hub:startDrag(io) self:setState({dragging=true,dragOffset=(io.Position-Vector3.new(self.ref.AbsolutePosition.X,self.ref.AbsolutePosition.Y,0)).XY}) end
function Hub:doDrag(io) if self.state.dragging then local np=(io.Position-Vector3.new(0,0,0)).XY-self.state.dragOffset; self:setState({pos=UDim2.new(0,np.X,0,np.Y)}) end end
function Hub:stopDrag() self:setState({dragging=false}) end
function Hub:toggleAntiAFK()
	if not self.state.antiAFK then self.afkConn=Players.LocalPlayer.Idled:Connect(function() VU:CaptureController(); VU:ClickButton2(Vector2.zero) end)
	else if self.afkConn then self.afkConn:Disconnect(); self.afkConn=nil end end
	self:setState({antiAFK=not self.state.antiAFK})
end

local MINIGAMES = { {id="RuinRush", title="RuinRush", Component=RRPanel }, }
function Hub:render()
	local s=self.state
	local sideChildren={ Layout=Roact.createElement("UIListLayout",{Padding=UDim.new(0,6)}) }
	for _,mg in ipairs(MINIGAMES) do
		sideChildren["btn_"..mg.id]=Roact.createElement("TextButton",{Text=(s.active==mg.id and "▶ " or "")..mg.title,Font=Enum.Font.GothamBold,TextSize=16,BackgroundColor3=(s.active==mg.id) and Color3.fromRGB(70,120,200) or Color3.fromRGB(55,55,55),TextColor3=Color3.new(1,1,1),BorderSizePixel=0,Size=UDim2.new(1,0,0,36),[Roact.Event.Activated]=function() self:setState({active=mg.id}) end},{UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,6)})})
	end
	local contentChildren={ Layout=Roact.createElement("UIListLayout",{Padding=UDim.new(0,0)}) }
	for _,mg in ipairs(MINIGAMES) do
		contentChildren["panel_"..mg.id]=Roact.createElement("Frame",{Visible=(s.active==mg.id),BackgroundTransparency=1,Size=UDim2.new(1,0,1,0)},{ Panel=Roact.createElement(mg.Component) })
	end
	return Roact.createElement("ScreenGui",{ResetOnSpawn=false},{
		Toggle=Roact.createElement("TextButton",{Text=":D",Font=Enum.Font.GothamBold,TextSize=22,BackgroundColor3=Color3.fromRGB(50,50,90),TextColor3=Color3.new(1,1,1),Size=UDim2.new(0,36,0,36),Position=UDim2.new(0,10,0,10),ZIndex=5,[Roact.Event.Activated]=function() self:setState({showUI=not s.showUI}) end}),
		Main=Roact.createElement("Frame",{Visible=s.showUI,Size=UDim2.new(0,680,0,380),Position=s.pos,BackgroundColor3=Color3.fromRGB(30,30,30),BorderSizePixel=0,[Roact.Ref]=function(r) self.ref=r end,[Roact.Event.InputBegan]=function(_,io) if io.UserInputType==Enum.UserInputType.MouseButton1 then self:startDrag(io) end end,[Roact.Event.InputChanged]=function(_,io) if io.UserInputType==Enum.UserInputType.MouseMovement then self:doDrag(io) end end,[Roact.Event.InputEnded]=function(_,io) if io.UserInputType==Enum.UserInputType.MouseButton1 then self:stopDrag() end end},{
			UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,10)}),
			Header=Roact.createElement("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,0,0,48)},{
				Title=Roact.createElement("TextLabel",{Text="Minigames Hub",Font=Enum.Font.GothamBold,TextSize=20,BackgroundTransparency=1,TextColor3=Color3.new(1,1,1),Size=UDim2.new(0.6,0,1,0),Position=UDim2.new(0,14,0,0),TextXAlignment=Enum.TextXAlignment.Left}),
				Anti=Roact.createElement("TextButton",{Text=s.antiAFK and "🟢 Anti-AFK ON" or "⚪ Anti-AFK",Font=Enum.Font.GothamBold,TextSize=16,BackgroundColor3=s.antiAFK and Color3.fromRGB(60,120,60) or Color3.fromRGB(70,70,70),TextColor3=Color3.new(1,1,1),BorderSizePixel=0,Size=UDim2.new(0,150,0,32),Position=UDim2.new(1,-164,0,8),[Roact.Event.Activated]=function() self:toggleAntiAFK() end},{UIC=Roact.createElement("UICorner",{CornerRadius=UDim.new(0,6)})}),
			}),
			Sep=Roact.createElement("Frame",{BackgroundColor3=Color3.fromRGB(55,55,55),BorderSizePixel=0,Size=UDim2.new(1,-20,0,1),Position=UDim2.new(0,10,0,48)}),
			Body=Roact.createElement("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,-20,1,-62),Position=UDim2.new(0,10,0,58)},{
				Layout=Roact.createElement("UIListLayout",{FillDirection=Enum.FillDirection.Horizontal,Padding=UDim.new(0,10)}),
				Side=Roact.createElement("Frame",{BackgroundColor3=Color3.fromRGB(35,35,35),BorderSizePixel=0,Size=UDim2.new(0,170,1,0)},sideChildren),
				Content=Roact.createElement("Frame",{BackgroundTransparency=1,Size=UDim2.new(1,-180,1,0)},contentChildren),
			})
		})
	})
end

Roact.mount(Roact.createElement(Hub), LP:WaitForChild("PlayerGui"))
